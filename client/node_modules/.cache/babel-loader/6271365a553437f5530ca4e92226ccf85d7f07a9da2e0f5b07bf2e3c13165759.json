{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project1\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport stubs from './defaultStubs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [language, setLanguage] = useState(\"cpp\");\n  const [status, setStatus] = useState(\"\");\n  const [jobId, setJobId] = useState(\"\");\n  useEffect(() => {\n    setCode(stubs[language]);\n  }, [language]);\n  const handleSubmit = async () => {\n    const payload = {\n      language,\n      code\n    };\n    try {\n      setJobId(\"\");\n      setStatus(\"\");\n      setOutput(\"\");\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/run\", payload);\n      setJobId(data.jobId);\n      let intervalId;\n      intervalId = setInterval(async () => {\n        try {\n          const {\n            data: dataRes\n          } = await axios.get(\"http://localhost:5000/status\", {\n            params: {\n              id: data.jobId\n            }\n          });\n          const {\n            success,\n            job,\n            error\n          } = dataRes;\n          if (success) {\n            const {\n              status: jobStatus,\n              output: jobOutput\n            } = job;\n            setStatus(jobStatus);\n            if (jobStatus === \"pending\") return;\n            setOutput(jobOutput);\n            clearInterval(intervalId);\n          } else {\n            setStatus(\"Error: Please retry\");\n            console.error(error);\n            clearInterval(intervalId);\n            setOutput((error === null || error === void 0 ? void 0 : error.stderr) || \"An unknown error occurred.\");\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }, 1000);\n    } catch (error) {\n      if (error.response) {\n        var _error$response$data, _error$response$data$;\n        const errMsg = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.err) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.stderr) || \"Unknown error occurred.\";\n        setOutput(errMsg);\n      } else {\n        setOutput(\"Error connecting to server!\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/logo.png\",\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Online Code Compiler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Language: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: language,\n        onChange: e => {\n          let response = window.confirm(\"WARNING: Switching the language will remove your data\");\n          if (response) {\n            setLanguage(e.target.value);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cpp\",\n          children: \"C++\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"py\",\n          children: \"Python\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"textarea\",\n      value: code,\n      onChange: e => setCode(e.target.value),\n      rows: 20,\n      cols: 75\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: jobId && 'JobId: ' + jobId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"output\",\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vGgzkFYb1IbXr85pn1MJwRn6u78=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useState","useEffect","stubs","jsxDEV","_jsxDEV","App","_s","code","setCode","output","setOutput","language","setLanguage","status","setStatus","jobId","setJobId","handleSubmit","payload","data","post","intervalId","setInterval","dataRes","get","params","id","success","job","error","jobStatus","jobOutput","clearInterval","console","stderr","response","_error$response$data","_error$response$data$","errMsg","err","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","window","confirm","target","rows","cols","onClick","_c","$RefreshReg$"],"sources":["D:/Project1/client/src/App.js"],"sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport React, { useState, useEffect} from 'react';\nimport './styles.css';\nimport stubs from './defaultStubs';\nfunction App() {\n  const [code, setCode] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [language, setLanguage] = useState(\"cpp\");\n  const [status, setStatus] = useState(\"\");\n  const [jobId, setJobId] = useState(\"\");\n\n  useEffect(() => {\n    setCode(stubs[language])\n  }, [language]);\n\n  const handleSubmit = async () => {\n    const payload = {\n      language,\n      code,\n    };\n\n    try {\n      setJobId(\"\");\n      setStatus(\"\");\n      setOutput(\"\");\n      const { data } = await axios.post(\"http://localhost:5000/run\", payload);\n      setJobId(data.jobId);\n      let intervalId;\n\n      intervalId = setInterval(async () => {\n        try {\n          const { data: dataRes } = await axios.get(\n            \"http://localhost:5000/status\",\n            { params: { id: data.jobId } }\n          );\n\n          const { success, job, error } = dataRes;\n\n          if (success) {\n            const { status: jobStatus, output: jobOutput } = job;\n            setStatus(jobStatus);\n            if (jobStatus === \"pending\") return;\n            setOutput(jobOutput);\n            clearInterval(intervalId);\n          } else {\n            setStatus(\"Error: Please retry\");\n            console.error(error);\n            clearInterval(intervalId);\n            setOutput(error?.stderr || \"An unknown error occurred.\");\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }, 1000);\n    } catch (error) {\n      if (error.response) {\n        const errMsg = error.response.data?.err?.stderr || \"Unknown error occurred.\";\n        setOutput(errMsg);\n      } else {\n        setOutput(\"Error connecting to server!\");\n      }\n    }\n  };\n  return (\n    <div className=\"container\">\n      <img src=\"/logo.png\" alt=\"Logo\" className=\"logo\" />\n      <h1 className=\"heading\">Online Code Compiler</h1>\n      <div>\n        <label>Language: </label>\n        <select\n          value = {language}\n          onChange={(e) => {\n            let response = window.confirm(\n              \"WARNING: Switching the language will remove your data\"\n            )\n            if(response){\n              setLanguage(e.target.value);\n            }\n          }}\n        >\n          <option value = \"cpp\">C++</option>\n          <option value = \"py\">Python</option>\n        </select>\n      </div>\n      <br>\n      </br>\n      <textarea\n        className=\"textarea\"\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        rows={20}\n        cols={75}\n      ></textarea>\n      <br />\n      <button className=\"button\" onClick={handleSubmit}>\n        Submit\n      </button>\n      <p>{status}</p>\n      <p>{jobId && 'JobId: ' + jobId}</p>\n      <p className=\"output\">{output}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}