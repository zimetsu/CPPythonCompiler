{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project1\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [code, setCode] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [language, setLanguage] = useState(\"cpp\");\n  const [status, setStatus] = useState(\"\");\n  const [jobId, setJobId] = useState(\"\");\n  const handleSubmit = async () => {\n    const payload = {\n      language,\n      code\n    };\n    try {\n      setJobId(\"\");\n      setStatus(\"\");\n      setOutput(\"\");\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/run\", payload);\n      setJobId(data.jobId);\n      let intervalId;\n      intervalId = setInterval(async () => {\n        try {\n          const {\n            data: dataRes\n          } = await axios.get(\"http://localhost:5000/status\", {\n            params: {\n              id: data.jobId\n            }\n          });\n          const {\n            success,\n            job,\n            error\n          } = dataRes;\n          if (success) {\n            const {\n              status: jobStatus,\n              output: jobOutput\n            } = job;\n            setStatus(jobStatus);\n            if (jobStatus === \"pending\") return;\n            setOutput(jobOutput);\n            clearInterval(intervalId);\n          } else {\n            setStatus(\"Error: Please retry\");\n            console.error(error);\n            clearInterval(intervalId);\n            setOutput((error === null || error === void 0 ? void 0 : error.stderr) || \"An unknown error occurred.\");\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }, 1000);\n    } catch (error) {\n      if (error.response) {\n        var _error$response$data, _error$response$data$;\n        const errMsg = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.err) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.stderr) || \"Unknown error occurred.\";\n        setOutput(errMsg);\n      } else {\n        setOutput(\"Error connecting to server!\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WPmW8bKxPMAhmCDbpAyWtZZgFSs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","App","_s","code","setCode","output","setOutput","language","setLanguage","status","setStatus","jobId","setJobId","handleSubmit","payload","data","post","intervalId","setInterval","dataRes","get","params","id","success","job","error","jobStatus","jobOutput","clearInterval","console","stderr","response","_error$response$data","_error$response$data$","errMsg","err","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Project1/client/src/App.js"],"sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport './styles.css';\n\nfunction App() {\n  const [code, setCode] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const [language, setLanguage] = useState(\"cpp\");\n  const [status, setStatus] = useState(\"\");\n  const [jobId, setJobId] = useState(\"\");\n\n  const handleSubmit = async () => {\n    const payload = {\n      language,\n      code,\n    };\n\n    try {\n      setJobId(\"\");\n      setStatus(\"\");\n      setOutput(\"\");\n      const { data } = await axios.post(\"http://localhost:5000/run\", payload);\n      setJobId(data.jobId);\n      let intervalId;\n\n      intervalId = setInterval(async () => {\n        try {\n          const { data: dataRes } = await axios.get(\n            \"http://localhost:5000/status\",\n            { params: { id: data.jobId } }\n          );\n\n          const { success, job, error } = dataRes;\n\n          if (success) {\n            const { status: jobStatus, output: jobOutput } = job;\n            setStatus(jobStatus);\n            if (jobStatus === \"pending\") return;\n            setOutput(jobOutput);\n            clearInterval(intervalId);\n          } else {\n            setStatus(\"Error: Please retry\");\n            console.error(error);\n            clearInterval(intervalId);\n            setOutput(error?.stderr || \"An unknown error occurred.\");\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }, 1000);\n    } catch (error) {\n      if (error.response) {\n        const errMsg = error.response.data?.err?.stderr || \"Unknown error occurred.\";\n        setOutput(errMsg);\n      } else {\n        setOutput(\"Error connecting to server!\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Rest of the JSX code remains the same */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}